@startuml

abstract class handle {
   -- Events --
   ObjectBeingDestroyed
}


enum matdoc.enums.AccessLevel {
   -- Enumeration Values --
   Public
   Protected
   Private
   -- Methods --
   {method} + e = AccessLevel(varargin)
   .. Hidden ..
   {method} + varargout = colon(varargin)
   .. Public ..
   {method} + lhs1 = char(rhs1)
   {method} + isEqual = eq(this, other)
   {method} + isEqual = ne(this, other)
   .. Static ..
   {method}{static} + enum = from(val)
   {method}{static} + enum = fromNum(val)
   {method}{static} + enum = fromStr(val)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
}

matdoc.enums.AccessLevel --|> uint32

class matdoc.meta.Class {
   -- Properties --
   .. Protected ..
   {field} # Configuration < matdoc.super.WithMetaObjProps
             The handle to the export configuration

Help for matdoc.meta.Class/Configuration is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # Parent < matdoc.super.WithMetaObjProps
             the parent object

Help for matdoc.meta.Class/Parent is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # UmlRoot < matdoc.super.WithMetaObjProps
             Handle to the parent matdoc.Documentation class

Help for matdoc.meta.Class/UmlRoot is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   .. SetAccess = Protected ..
   {field} + Abstract
             Is the class abstract?
             
   {field} + ConstructOnLoad
             Construct OnLoad
             
   {field} + Constructor
             Handle to the matdoc.meta.Method instance representing the
  constructor method
             
   {field} + ContainingPackage
             ContainingPackage
             
   {field} + Description
             Class description
             
   {field} + DetailedDescription
             Detailed class description
             
   {field} + EnumerationMemberList
             The list of EnumerationMembers
             
   {field} + EventList
             The list of events
             
   {field} + HandleCompatible
             Is the class a handle class?
             
   {field} + hasAbstractMembers
             Flag if any of the defined properties or methods are abstract
             
   {field} + Hidden
             Is the class hidden?
             
   {field} + InferiorClasses
             InferiorClasses
             
   {field} + InheritationRelations
             The inheritation relation ships
             
   {field} + isBuiltIn
             If true the wrapped class is a built in matlab class
             
   {field} + metaObj < matdoc.meta.super.Base
             the actual wrapped meta object (meta.package, meta.class,
  meta.method, meta.property, etc.)

Help for matdoc.meta.Class/metaObj is inherited from superclass MATDOC.META.SUPER.BASE
             
   {field} + MethodList
             The list of methods
             
   {field} + MethodListFlattend
             A complete list of methods incl the ones inheritated from
  other classes
             
   {field} + Name
             The name of Class
             
   {field} + NameRaw
             The raw name of the class without the leading package or
  namepace
             
   {field} + plantUML < matdoc.uml.super.WithPlantUML
             The plantUML representation of the object

Help for matdoc.meta.Class/plantUML is inherited from superclass MATDOC.UML.SUPER.WITHPLANTUML
             
   {field} + PropertyList
             The list of properties
             
   {field} + PropertyListFlattend
             A complete list of properties incl the ones inheritated from
  other classes
             
   {field} + Sealed
             Is the class sealed?
             
   {field} + SortedMethodList
             It cotains a Nx2 cell array. The first column holds the
  category (categoryUML property) and the second column the
  actual cell array of handles to the meta classes.
  N = number of unique categories.
             
   {field} + SortedPropertyList
             It cotains a Nx2 cell array. The first column holds the
  category (categoryUML property) and the second column the
  actual cell array of handles to the meta classes.
  N = number of unique categories.
             
   {field} + SuperclassList
             The list of super classes
             
   {field} + SuperclassListFlattend
             A complete list of super classes incl. nested inheritated classes
             
   -- Methods --
   {method} + this = Class(metaObj, parent)
   .. Protected ..
   {method} # umlStr = getPlantUML(this) < matdoc.uml.Class
   {method} # umlStr = getPlantUmlEnumerationValues(this) < matdoc.uml.Class
   {method} # umlStr = getPlantUmlEvents(this) < matdoc.uml.Class
   {method} # umlStr = getPlantUmlInheritanceRelation(this) < matdoc.uml.Class
   {method} # umlStr = getPlantUmlMethods(this) < matdoc.uml.Class
   {method} # umlStr = getPlantUmlProperties(this) < matdoc.uml.Class
   {method} # getSortedMethodList(this)
   {method} # getSortedPropertyList(this)
   {method} # val = getSuperclassListFlattend(this)
   {method} # walkMeta(this)
   .. Public ..
   {method} + is_eq = eq(this, other) < matdoc.meta.super.Base
   {method} + is_ne = ne(this, other) < matdoc.meta.super.Base
   {method} + [B, IX] = sort(this, dim, mode) < matdoc.meta.super.Base
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.meta.Class ..|> matdoc.meta.super.Base
matdoc.meta.Class --|> matdoc.uml.Class

abstract class matdoc.meta.super.Base {
   -- Properties --
   .. Abstract  SetAccess = Protected ..
   {field}{abstract} + Name
                       The name of the meta object
                       
   .. Protected ..
   {field} # Configuration < matdoc.super.WithMetaObjProps
             The handle to the export configuration

Help for matdoc.meta.super.Base/Configuration is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # Parent < matdoc.super.WithMetaObjProps
             the parent object

Help for matdoc.meta.super.Base/Parent is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # UmlRoot < matdoc.super.WithMetaObjProps
             Handle to the parent matdoc.Documentation class

Help for matdoc.meta.super.Base/UmlRoot is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   .. SetAccess = Protected ..
   {field} + metaObj
             the actual wrapped meta object (meta.package, meta.class,
  meta.method, meta.property, etc.)
             
   -- Methods --
   {method} + this = Base(metaObj, parent)
   .. Abstract Protected ..
   {method}{abstract} # walkMeta(this)
   .. Public ..
   {method} + is_eq = eq(this, other)
   {method} + is_ne = ne(this, other)
   {method} + [B, IX] = sort(this, dim, mode)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.meta.super.Base --|> matdoc.super.WithMetaObjProps

class matdoc.super.WithMetaObjProps {
   -- Properties --
   .. Protected ..
   {field} # Configuration
             The handle to the export configuration
             
   {field} # Parent
             the parent object
             
   {field} # UmlRoot
             Handle to the parent matdoc.Documentation class
             
   -- Methods --
   {method} + obj = WithMetaObjProps()
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.super.WithMetaObjProps ..|> handle

class matdoc.uml.Class {
   -- Properties --
   .. Protected ..
   {field} # Configuration < matdoc.super.WithMetaObjProps
             The handle to the export configuration

Help for matdoc.uml.Class/Configuration is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # Parent < matdoc.super.WithMetaObjProps
             the parent object

Help for matdoc.uml.Class/Parent is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # UmlRoot < matdoc.super.WithMetaObjProps
             Handle to the parent matdoc.Documentation class

Help for matdoc.uml.Class/UmlRoot is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   .. SetAccess = Protected ..
   {field} + plantUML < matdoc.uml.super.WithPlantUML
             The plantUML representation of the object

Help for matdoc.uml.Class/plantUML is inherited from superclass MATDOC.UML.SUPER.WITHPLANTUML
             
   -- Methods --
   {method} + obj = Class()
   .. Protected ..
   {method} # umlStr = getPlantUML(this)
   {method} # umlStr = getPlantUmlEnumerationValues(this)
   {method} # umlStr = getPlantUmlEvents(this)
   {method} # umlStr = getPlantUmlInheritanceRelation(this)
   {method} # umlStr = getPlantUmlMethods(this)
   {method} # umlStr = getPlantUmlProperties(this)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.uml.Class ..|> matdoc.uml.super.Base

abstract class matdoc.uml.super.Base {
   -- Properties --
   .. Protected ..
   {field} # Configuration < matdoc.super.WithMetaObjProps
             The handle to the export configuration

Help for matdoc.uml.super.Base/Configuration is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # Parent < matdoc.super.WithMetaObjProps
             the parent object

Help for matdoc.uml.super.Base/Parent is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   {field} # UmlRoot < matdoc.super.WithMetaObjProps
             Handle to the parent matdoc.Documentation class

Help for matdoc.uml.super.Base/UmlRoot is inherited from superclass MATDOC.SUPER.WITHMETAOBJPROPS
             
   .. SetAccess = Protected ..
   {field} + plantUML < matdoc.uml.super.WithPlantUML
             The plantUML representation of the object

Help for matdoc.uml.super.Base/plantUML is inherited from superclass MATDOC.UML.SUPER.WITHPLANTUML
             
   -- Methods --
   {method} + obj = Base()
   .. Abstract Protected ..
   {method}{abstract} # getPlantUML(this) < matdoc.uml.super.WithPlantUML
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.uml.super.Base --|> matdoc.super.WithMetaObjProps
matdoc.uml.super.Base ..|> matdoc.uml.super.WithPlantUML

abstract class matdoc.uml.super.WithPlantUML {
   -- Properties --
   .. SetAccess = Protected ..
   {field} + plantUML
             The plantUML representation of the object
             
   -- Methods --
   {method} + obj = WithPlantUML()
   .. Abstract Protected ..
   {method}{abstract} # getPlantUML(this)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed
}

matdoc.uml.super.WithPlantUML ..|> handle

class uint32 {
   -- Methods --
   {method} + varargout = uint32(varargin)
}


@enduml