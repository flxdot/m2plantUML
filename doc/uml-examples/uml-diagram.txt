@startuml

abstract class handle {
   -- Events --
   ObjectBeingDestroyed
}


class matdoc.Configuration {
   -- Properties --
   .. Protected ..
   {field} # ConfigPropertyList
   .. Public ..
   {field} + HideEnumerationMember
   {field} + HideEvents
   {field} + HideMethods
   {field} + HideProperties
   {field} + IgnoreBuiltInClass
   {field} + IngoreBuiltInMethodInheritance
   {field} + IngoreBuiltInPropertyInheritance
   {field} + MethodInheritanceHint
   {field} + PropertyDescription
   {field} + PropertyInheritanceHint
   -- Methods --
   {method} + this = Configuration(varargin)
   .. Public ..
   {method} + reset(this)
   {method} + setSetting(this, key, value)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed < handle
}

matdoc.Configuration ..|> handle

class matdoc.Documentation {
   -- Properties --
   .. Protected ..
   {field} # UmlObjects_
   .. Public ..
   {field} + Configuration
   {field} + ListAllClass
   {field} + ListAllPackages
   {field} + UmlObjects
   .. SetAccess = Protected ..
   {field} + ClassList
   {field} + PackageList
   {field} + plantUML < matdoc.uml.super.WithPlantUML
   -- Methods --
   {method} + this = Documentation(objects_, varargin)
   .. Protected ..
   {method} # addMetaObj(this, metaObj)
   {method} # umlStr = getPlantUML(this)
   .. Public ..
   {method} + addObj(this, object)
   {method} + clear(this)
   {method} + UmlToFile(this, File_)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed < handle
}

matdoc.Documentation ..|> matdoc.uml.super.WithPlantUML

enum matdoc.enums.AccessLevel {
   -- Enumeration Values --
   Public
   Protected
   Private
   -- Methods --
   {method} + e = AccessLevel(varargin)
   .. Hidden ..
   {method} + varargout = colon(varargin)
   .. Public ..
   {method} + lhs1 = char(rhs1)
   {method} + isEqual = eq(this, other)
   {method} + isEqual = ne(this, other)
   .. Static ..
   {method}{static} + enum = from(val)
   {method}{static} + enum = fromNum(val)
   {method}{static} + enum = fromStr(val)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
}

matdoc.enums.AccessLevel --|> uint32

abstract class matdoc.meta.super.Base {
   -- Properties --
   .. Abstract  SetAccess = Protected ..
   {field}{abstract} + Name
   .. Protected ..
   {field} # Configuration < matdoc.super.WithMetaObjProps
   {field} # Parent < matdoc.super.WithMetaObjProps
   {field} # UmlRoot < matdoc.super.WithMetaObjProps
   .. SetAccess = Protected ..
   {field} + metaObj
   -- Methods --
   {method} + this = Base(metaObj, parent)
   .. Abstract Protected ..
   {method}{abstract} # walkMeta(this)
   .. Public ..
   {method} + is_eq = eq(this, other)
   {method} + is_ne = ne(this, other)
   {method} + [B, IX] = sort(this, dim, mode)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed < handle
}

matdoc.meta.super.Base --|> matdoc.super.WithMetaObjProps

class matdoc.super.WithMetaObjProps {
   -- Properties --
   .. Protected ..
   {field} # Configuration
   {field} # Parent
   {field} # UmlRoot
   -- Methods --
   {method} + obj = WithMetaObjProps()
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed < handle
}

matdoc.super.WithMetaObjProps ..|> handle

abstract class matdoc.uml.super.WithPlantUML {
   -- Properties --
   .. SetAccess = Protected ..
   {field} + plantUML
   -- Methods --
   {method} + obj = WithPlantUML()
   .. Abstract Protected ..
   {method}{abstract} # getPlantUML(this)
   .. Static Hidden ..
   {method}{static} + E = empty(varargin)
   -- Events --
   ObjectBeingDestroyed < handle
}

matdoc.uml.super.WithPlantUML ..|> handle

class uint32 {
   -- Methods --
   {method} + varargout = uint32(varargin)
}


@enduml