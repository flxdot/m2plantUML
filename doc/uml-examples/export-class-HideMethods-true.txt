@startuml

abstract class handle {
   -- Events --
   ObjectBeingDestroyed
}


enum matdoc.Enums.AccessLevel {
   -- Enumeration Values --
   Public
   Protected
   Private
}

matdoc.Enums.AccessLevel --|> uint32

class matdoc.Meta.Class {
   -- Properties --
   .. Protected ..
   {field} # Configuration < matdoc.Meta.Super.Meta
   {field} # Parent < matdoc.Meta.Super.Meta
   {field} # UmlRoot < matdoc.Meta.Super.Meta
   .. SetAccess = Protected ..
   {field} + Abstract
   {field} + ConstructOnLoad
   {field} + ContainingPackage
   {field} + Description
   {field} + DetailedDescription
   {field} + EnumerationMemberList
   {field} + EventList
   {field} + HandleCompatible
   {field} + Hidden
   {field} + InferiorClasses
   {field} + InheritationRelations
   {field} + isBuiltIn
   {field} + metaObj < matdoc.Meta.Super.Meta
   {field} + MethodList
   {field} + MethodListFlattend
   {field} + Name
   {field} + plantUML < matdoc.Super.DisplayUML
   {field} + PropertyList
   {field} + PropertyListFlattend
   {field} + Sealed
   {field} + SortedMethodList
   {field} + SortedPropertyList
   {field} + SuperclassList
   {field} + SuperclassListFlattend
   -- Events --
   ObjectBeingDestroyed
}

matdoc.Meta.Class --|> matdoc.Meta.Super.Meta

abstract class matdoc.Meta.Super.Meta {
   -- Properties --
   .. Abstract  SetAccess = Protected ..
   {field}{abstract} + Name
   .. Protected ..
   {field} # Configuration
   {field} # Parent
   {field} # UmlRoot
   .. SetAccess = Protected ..
   {field} + metaObj
   {field} + plantUML < matdoc.Super.DisplayUML
   -- Events --
   ObjectBeingDestroyed
}

matdoc.Meta.Super.Meta --|> matdoc.Super.DisplayUML

abstract class matdoc.Super.DisplayUML {
   -- Properties --
   .. SetAccess = Protected ..
   {field} + plantUML
   -- Events --
   ObjectBeingDestroyed
}

matdoc.Super.DisplayUML --|> handle

class uint32 {
}


@enduml